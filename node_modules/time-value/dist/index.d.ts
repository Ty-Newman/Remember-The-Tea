/**
 * Represents an amount of time.
 */
export declare class Time {
    constructor(hours?: number, minutes?: number, seconds?: number);
    private readonly _hours;
    private readonly _minutes;
    private readonly _seconds;
    private readonly isNegative;
    /**
     * Get hours.
     */
    getHours(): number;
    /**
     * Get minutes.
     */
    getMinutes(): number;
    /**
     * Get seconds.
     */
    getSeconds(): number;
    /**
     * Add a time value.
     *
     * @param value Time value to add.
     */
    add(value: Time): Time;
    /**
     * Subtract a time value.
     *
     * @param value Time value to subtract.
     */
    sub(value: Time): Time;
    /**
     * Format time as `hh:mm:ss`.
     */
    toString(): string;
    /**
     * Parses a time string (`hh:mm:ss`) into it's parts.
     *
     * @param text String value.
     */
    private static _parse;
    /**
     * Parses a time string (`hh:mm:ss`) into an instance of Time.
     *
     * @param text String value.
     */
    static parse(text: string): Time;
    /**
     *Parse a collection of time strings (`hh:mm:ss`) and sum their values into one instance of Time.
     *
     * @param texts Collection of string values.
     */
    static sum(texts: string[]): Time;
}
